document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
library(devtools)
document()
document()
document()
document()
document()
library(HMtools)
myhmlist <- t_vari.hm.list(list(a = array(1:3, c(3)),
b = array(1:6, c(3,2))))
myhmlist[[[1]]]
getI_sub_hm.list(myhmlist, 1)
document()
document()
document()
document()
library(HMtools)
myhmlist <- t_vari.hm.list(list(a = array(1:3, c(3)),
b = array(1:6, c(3,2))))
myhmlist[[[1]]]
myhmlist <- t_vari.hm.list(list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2))))
myhmlist[[[1]]]
a = t_vari.array(1:3, c(3))
a[[1]]
'[['
document()
document()
document()
document()
document()
document()
myhmlist <- t_vari.hm.list(list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2))))
library(HMtools)
myhmlist <- t_vari.hm.list(list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2))))
myhmlist[1]
Q
myhmlist[[1]]
myhmlist[1]
strrep("a",0)
a = t_vari.array(1:3, c(3))
b = t_vari.array(1:6, c(3,2))
dim(a)
myhmlist[1]
times
dim(myhmlist[[a]])
dim(myhmlist[["a"]])
dim(a)
myhmlist[["a"]]
myhmlist
myhmlist <- t_vari.hm.list()
myhmlist <- list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2)))
myhmlist[1]
myhmlist <- t_vari.hm.list()
myhmlist$a <- t_vari.array(1:3, c(3))
myhmlist$b = t_vari.array(1:6, c(3,2))
myhmlist[1]
times
x
myhmlist
myhmlist$a
myhmlist[["a"]]
dim(myhmlist[["a"]])
myhmlist <- t_vari.hm.list()
myhmlist$a <- t_vari.array(1:3, c(3))
myhmlist$b = t_vari.array(1:6, c(3,2))
myhmlist[1]
getI_sub_hm.list(myhmlist,1)
myhmlist[1]
myhmlist[1] <- 0
myhmlist
myhmlist <- t_vari.hm.list(list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2))))
myhmlist
putI_sub_hm.list(myhmlist,1, list(a = 0))
putI_sub_hm.list(myhmlist,1, list(a = 0))
putI_sub_hm.list
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
for(j in INa){
putI_t_vari.array(Data[[j]], i, value[[j]])
}
return(Data)
}
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
browser()
for(j in INa){
putI_t_vari.array(Data[[j]], i, value[[j]])
}
return(Data)
}
putI_sub_hm.list(myhmlist,1, list(a = list(a = 0)))
putI_sub_hm.list(myhmlist,1, list(a = list(a = 0)))
INa
DaNa
PuNa
names(myhmlist)
names(myhmlist.Data)
names(myhmlist@.Data)
myhmlist$a
myhmlist <- t_vari.hm.list(list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2))))
myhmlist$a
myhmlist[["a"]]
myhmlist$a <- list(a = a, b = a)
names(myhmlist@.Data)
myhmlist[["a"]]
myhmlist$a
names(myhmlist@.Data)
myhmlist <- t_vari.hm.list(a = list(a = array(1:3, c(3)),
b = array(1:6, c(3,2))))
myhmlist <- t_vari.hm.list()
myhmlist$a <- list(a = a, b = a)
a = t_vari.array(1:3, c(3))
b = t_vari.array(1:6, c(3,2))
myhmlist$a <- list(a = a, b = a)
names(myhmlist@.Data)
names(myhmlist)
document()
detach("package:HMtools", unload = TRUE)
document()
library(HMtools)
aa <- list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2)))
bb <- list(d = t_vari.array(1:3, c(3)),
b = t_vari.array(1:12, c(3,2,2)))
myhmlist <- t_vari.hm.list()
myhmlist$aa <- aa
myhmlist$bb <- bb
myhmlist[1]
myhmlist[1] <- myhmlist[3]
myhmlist[1]
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
for(j in INa){
putI_t_vari.array(Data[[j]], i, value[[j]])
}
return(Data)
}
myhmlist[1] <- myhmlist[3]
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
for(j in INa){
putI_t_vari.array(Data[[j]], i, value[[j]])
}
return(Data)
}
myhmlist[1] <- myhmlist[3]
INa
myhmlist[1]
myhmlist[3]
dd <- myhmlist[3]
dd
myhmlist[1] <- dd
myhmlist[1]
#' @title subsetting geben for HM.Data
#' @description Extract the data required by Locat in Data for list
#' @param Data the data, from it get the required data
#' @param i index
#' @param value value
#' @return new data
#' @export
'[<-.t_vari.hm.list' <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
for (j in INa) {
Data[[j]] <- putI_sub_hm.list(Data[[j]], i, value[[j]])
}
return(Data)
}
[<-.t_vari.hm.list
myhmlist[1] <- dd
myhmlist[1]
#' @title subsetting geben for HM.Data
#' @description Extract the data required by Locat in Data for list
#' @param Data the data, from it get the required data
#' @param i index
#' @param value value
#' @return new data
#' @export
'[<-.t_vari.hm.list' <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
browser()
for (j in INa) {
Data[[j]] <- putI_sub_hm.list(Data[[j]], i, value[[j]])
}
return(Data)
}
myhmlist[1] <- dd
INa
for (j in INa) {
Data[[j]] <- putI_sub_hm.list(Data[[j]], i, value[[j]])
}
j
Data
value[[j]]
putI_sub_hm.list(Data[[j]], i, value[[j]])
i
value[[j]]
Data[[j]]
putI_sub_hm.list(aa, dd$aa)
putI_sub_hm.list(aa, 1, dd$aa)
dd$aa
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
browser()
for(j in INa){
putI_t_vari.array(Data[[j]], i, value[[j]])
}
return(Data)
}
aa$a[1]
aa$a[1] <- 3
aa$a[1]
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
browser()
for(j in INa){
putI_t_vari.array(Data[[j]], i, value[[j]])
}
return(Data)
}
putI_sub_hm.list(aa, 1, dd$aa)
INa
j
putI_sub_hm.list(aa, 1, dd$aa)
INa
value
for(j in INa){
putI_t_vari.array(Data[[j]], i, value[[j]])
}
Data
j
putI_t_vari.array(Data[[j]], i, value[[j]])
Data[[j]]
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
browser()
for(j in INa){
# putI_t_vari.array(Data[[j]], i, value[[j]])
Data[[j]][i] <- value[[j]]
}
return(Data)
}
putI_sub_hm.list(aa, 1, dd$aa)
for(j in INa){
# putI_t_vari.array(Data[[j]], i, value[[j]])
Data[[j]][i] <- value[[j]]
}
Data
Data[[j]][i]
j
INa
j in INa
INa
value[[j]]
j = "b"
Data[[j]][i] <- value[[j]]
value[[j]]
Data[[j]][i]
j
Data[[j]]
i
#' @title putList
#' @description put the data to a HM.Data
#' @param Data the data, from it get the required data
#' @param i index
#' @param value PutData
#' @return list
#' @export
putI_sub_hm.list <- function(Data, i, value){
DaNa <- names(Data)
PuNa <- names(value)
INa <- intersect(DaNa,PuNa)
browser()
for(j in INa){
# putI_t_vari.array(Data[[j]], i, value[[j]])
Data[[j]][[i]] <- value[[j]]
}
return(Data)
}
putI_sub_hm.list(aa, 1, dd$aa)
for(j in INa){
# putI_t_vari.array(Data[[j]], i, value[[j]])
Data[[j]][[i]] <- value[[j]]
}
Data
j
j = "b"
Data[[j]][[i]] <- value[[j]]
Data
document()
document()
library(HMtools)
aa <- list(a = t_vari.array(1:3, c(3)),
b = t_vari.array(1:6, c(3,2)))
bb <- list(d = t_vari.array(1:3, c(3)),
b = t_vari.array(1:12, c(3,2,2)))
myhmlist <- t_vari.hm.list()
myhmlist$aa <- aa
myhmlist$bb <- bb
dd <- myhmlist[3]
myhmlist[1] <- dd
myhmlist
myhmlist[1]
dd$bb$b <- NULL
myhmlist <- t_vari.hm.list()
myhmlist$aa <- aa
myhmlist$bb <- bb
myhmlist[1] <- dd
myhmlist[1]
class(mylist2) <- "t_vari.hm.list"
mylist2 <- list(aa = aa, bb = bb)
class(mylist2) <- "t_vari.hm.list"
mylist2[1]
myhmlist[1]
myhmlist <- t_vari.hm.list()
myhmlist$aa <- aa
myhmlist$bb <- bb
mylist2[1]
myhmlist[1]
mylist2$aa$d <- array(0)
mergeData(mylist2, myhmlist)
mergeData(myhmlist, mylist2)
getClass(myhmlist)
class(myhmlist)
class(mylist2) <- class(myhmlist)
mergeData(mylist2, myhmlist)
class(mylist2)
mylist3 <- mergeData(t_vari.hm.list(), mylist2)
mylist3
'leftmerge<-.hm.list' <- function(Ori, velua){
OrNa <- names(Ori)
NeNa <- names(velua)
INa <- intersect(OrNa, NeNa)
DNNa <- setdiff(NeNa, OrNa)
for (i in DNNa) {
Ori[[i]] <- velua[[i]]
}
for(i in INa){
Ori[[i]] <- merge_sub_list(Ori[[i]], velua[[i]])
}
return(Ori)
}
mylist4 <- t_vari.hm.list()
leftmerge(mylist4) <- myhmlist
aa$a
aa$b
aa$b[[1:2]]
aa$b[[2]]
aa$b[[c(1,2)]]
getI_t_vari.array <- function(Data, i){
dimN <- length(dim(Data))
browser()
return(eval(parse(text = paste0("Data[", i, strrep(",", dimN - 1), "]"))))
}
getI_t_vari.array(aa$b, 1:2)
dimN
i
text = paste0("Data[", i, strrep(",", dimN - 1), "]")
text
expression(i)
as.character(i)
as.integer(as.character(i))
c(as.integer(as.character(i)))
1:2
paste0("Data[c(", as.integer(as.character(i)),")", strrep(",", dimN - 1), "]")
paste0("Data[c(", c(as.integer(as.character(i))),")", strrep(",", dimN - 1), "]")
i <- 1:2
paste0("Data[c(", c(as.integer(as.character(i))),")", strrep(",", dimN - 1), "]")
dimN <- 2
paste0("Data[c(", c(as.integer(as.character(i))),")", strrep(",", dimN - 1), "]")
c(1 2)
paste(i, sep = ",")
paste0("Data[c(", paste(i, collapse = ","),")", strrep(",", dimN - 1), "]")
getI_t_vari.array <- function(Data, i){
dimN <- length(dim(Data))
browser()
return(eval(parse(text = paste0("Data[c(", paste(i, collapse = ","),")",
strrep(",", dimN - 1), "]"))))
}
aa$b[[c(1:2)]]
getI_t_vari.array(aa$b, 1:2)
document()
document()
names(viewFuPa)
find_data <- function(process, method, data = "All"){
if(data == "All") return(eval(parse(text =
paste0("Data_", process, ".", method))))
else return(eval(parse(text =
paste0("Data_", process, ".", method, "$", data))))
}
names(find_data)
expression(find_data)
paste0("Data", expression(find_data))
find_data <- function(funcName, data = "All"){
funcName <- expression(funcName)
if(data == "All") return(eval(parse(text =
paste0("Data_", funcName))))
else return(eval(parse(text =
paste0("Data_", process, ".", method, "$", data))))
}
Data_find_data <- 0
Data_funcName <- 1
find_data(find_data)
find_data(expression(find_data))
find_data <- function(funcName, data = "All"){
if(data == "All") return(eval(parse(text =
paste0("Data_", funcName))))
else return(eval(parse(text =
paste0("Data_", process, ".", method, "$", data))))
}
find_data(expression(find_data))
document()
document()
library(devtools)
document()
document()
document()
document()
library(HMtools)
library(devtools)
document()
library(HMtools)
library(devtools)
document()
document()
document()
library(devtools)
document()
